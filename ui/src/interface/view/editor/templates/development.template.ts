import { NoteSource } from '~/domain/note';

export const DEVELOPMENT_TEMPLATE =
  `<h1>Note: ~38</h1><p>The note was created at Friday 11:18 AM</p><p></p><p>Creating a comprehensive task list is an essential first step in organizing workflow, enabling teams to visualize responsibilities, track progress, and meet deadlines.</p><p></p><ul class=\"bulletList\"><li><p>Project Planning</p><ul class=\"bulletList\"><li><p>Create project timeline</p></li><li><p>Set up team meetings</p></li><li><p>Define key milestones</p></li><li><p>Allocate resources</p></li></ul></li><li><p>Development Tasks</p><ul class=\"bulletList\"><li><p>Set up development environment</p></li><li><p>Create database schema</p></li><li><p>Implement user authentication</p></li><li><p>Build frontend components</p></li><li><p>Write unit tests</p></li></ul></li></ul><p></p><ul data-type=\"taskList\"><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Quality Assurance</p><ul data-type=\"taskList\"><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Perform code review</p></div></li><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Run integration tests</p></div></li><li data-checked=\"false\" data-type=\"taskItem\"><label><input type=\"checkbox\"><span></span></label><div><p>Fix reported bugs</p></div></li><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Document testing process</p></div></li></ul></div></li><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Launch Preparation</p><ul data-type=\"taskList\"><li data-checked=\"false\" data-type=\"taskItem\"><label><input type=\"checkbox\"><span></span></label><div><p>Finalize user documentation</p></div></li><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Prepare marketing materials</p></div></li><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Set up analytics tracking</p></div></li><li data-checked=\"true\" data-type=\"taskItem\"><label><input type=\"checkbox\" checked=\"checked\"><span></span></label><div><p>Plan rollout strategy</p></div></li></ul></div></li></ul><p></p><pre><code>import { makeAutoObservable, runInAction } from 'mobx';\nimport { Note, NoteId, NoteName } from '~/domain/note';\nimport { createEffect } from '~/interface/shared/lib/create-effect';\nimport { notifications } from '~/interface/shared/lib/notifications';\nimport { notesManagerModel, NoteManagerModelInterface } from '../manager/model';\nimport { api } from './api';\n\nexport class NoteRenameModel {\n  process: {\n    id: NoteId;\n    input: NoteName;\n    initial: NoteName;\n  } | null = null;\n\n  constructor(private noteManagerModel: NoteManagerModelInterface) {\n    makeAutoObservable(this);\n  }\n\n  start(note: Note) {\n    this.process = {\n      id: note.id,\n      initial: note.name,\n      input: note.name,\n    };\n  }\n\n  update(payload: Pick&lt;Note, 'name'&gt;) {\n    const current = this.process;\n    if (current) {\n      runInAction(() =&gt; {\n        this.process = {\n          ...current,\n          input: payload.name,\n        };\n      });\n    }\n  }\n\n  apply = createEffect(async () =&gt; {\n    const process = this.process;\n    const canApply = process &amp;&amp; process?.initial !== process?.input;\n    if (canApply) {\n      const renameQuery = await api.rename({\n        data: {\n          id: process.id,\n          name: process.input.length ? process.input.trim() : process.initial,\n        },\n      });\n\n      if (renameQuery.data?.ok) {\n        await this.noteManagerModel.pull.run();\n      } else {\n        notifications.noteNotRenamed();\n      }\n    }\n\n    runInAction(() =&gt; {\n      this.process = null;\n    });\n  });\n}\n\nexport const noteRenameModel = new NoteRenameModel(notesManagerModel);\n</code></pre><p></p><p></p>
` as NoteSource;
