.tiptap {
  font-family: 'Roboto';

  padding-top: 5px;
  padding-bottom: 30vh;

  width: 100%;
  font-size: 17px;

  p {
    font-size: 17px;
  }

  ul[data-type='taskList'] {
    display: flex;
    flex-direction: column;
    margin-top: 4px;

    li {
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      padding: 0.5px 0;

      p {
        padding-left: 3px;
        margin-top: -1px;
      }

      label {
        input {
          -webkit-appearance: none;
          -moz-appearance: none;
          appearance: none;
          width: 18px;
          height: 18px;
          margin-right: 5px;
          margin-top: 2.5px;

          border-radius: 4px;

          position: relative;

          @apply bg-cyan-100 border-border border;
        }

        input:checked {
          background-color: #339af0;
          border-color: #339af0;

          @apply bg-cyan-500 border-cyan-700 border;
        }

        input:checked::after {
          content: '';
          position: absolute;
          top: 2px;
          left: 5px;
          width: 6px;
          height: 9px;
          border: solid #fff;
          border-width: 0 2px 2px 0;
          transform: rotate(45deg);
        }

        input:hover {
          @apply border-cyan-600;
        }
      }
    }
  }

  ol.orderedList {
    font-size: 17px;

    list-style: numeric;

    margin-top: 4px;
    padding-left: 22px;

    li {
      padding: 0.5px 0;
    }
  }

  ul.bulletList {
    font-size: 17px;

    list-style-type: disc;

    &:nth-child(2) {
      list-style-type: circle;
    }

    margin-top: 4px;
    padding-left: 22px;

    li {
      padding: 0.5px 0;
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: 1.2;
    text-wrap: pretty;

    &:first-child {
      font-size: 1.5rem;
    }
  }

  h1 {
    font-size: 1.4rem;
    margin-bottom: 12px;
  }

  h3 {
    font-size: 1.4rem;
    margin-top: 9px;
    margin-bottom: 7px;
  }

  pre {
    background-color: #161b22;
    border-radius: 6px;
    padding: 16px;
    overflow: auto;
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
    font-size: 14px;
    line-height: 1.45;
    color: #c9d1d9;
    margin: 12px 0;
  }

  code {
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
    font-size: 14px;
    color: #c9d1d9;
  }

  a {
    color: #007aff;
    cursor: pointer;

    &:hover {
      text-decoration: underline;
      text-underline-offset: 3px;
    }
  }

  hr {
    border: 0;
    border-bottom: 1px dashed oklch(0.442 0.017 285.786);
    margin: 1.5rem 0;
    opacity: 0.6;
    width: 96%;
    margin: 25px auto;
  }
}

.ProseMirror {
  min-height: 100%;
  overflow: auto;
}

/* Comments and quotes */
.hljs-comment,
.hljs-quote {
  color: #8b949e;
  font-style: italic;
}

/* Variables, attributes, tags, etc. */
.hljs-variable,
.hljs-template-variable,
.hljs-attribute,
.hljs-tag,
.hljs-name,
.hljs-regexp,
.hljs-link,
.hljs-selector-id,
.hljs-selector-class {
  color: #ff7b72;
}

/* Numbers, literals, and types */
.hljs-number,
.hljs-meta,
.hljs-built_in,
.hljs-builtin-name,
.hljs-literal,
.hljs-type,
.hljs-params {
  color: #79c0ff;
}

/* Strings and symbols */
.hljs-string,
.hljs-symbol,
.hljs-bullet {
  color: #a5d6ff;
}

/* Titles, sections, and functions */
.hljs-title,
.hljs-section,
.hljs-function {
  color: #d2a8ff;
  font-weight: 600;
}

/* Keywords and selector tags */
.hljs-keyword,
.hljs-selector-tag {
  color: #ff7b72;
  font-weight: 600;
}

/* Operators */
.hljs-operator {
  color: #c9d1d9;
}

/* Properties */
.hljs-property {
  color: #f0883e;
}

/* Emphasis */
.hljs-emphasis {
  font-style: italic;
}

/* Strong emphasis */
.hljs-strong {
  font-weight: 700;
}

/* Line highlighting (optional) */
.hljs-line-highlight {
  background-color: rgba(255, 255, 255, 0.05);
}

.ProseMirror-focused {
  border: none;
  outline: none;
}

.ProseMirror {
  width: 90vw;
}

@media (min-width: 600px) {
  .ProseMirror {
    width: 80vw;
  }
}

@media (min-width: 992px) {
  .ProseMirror {
    width: 70vw;
  }
}

@media (min-width: 1200px) {
  .ProseMirror {
    width: 60vw;
  }
}
